#!/usr/bin/env python2
#
# Unlock Peet's WiFi
#
# Peet's has an annoying click through that forces you to accept the terms and
# conditions. This program uses mechanize to automate this process.

from __future__ import print_function
from mechanize import Browser, BrowserStateError, LinkNotFoundError
    # mechanize is not yet available for python3
import sys

# This url should return the country code of Mount Denali, which is 'US'.
# This is one of any number of URLs that could be used for this purpose. We just
# need one that does not employ SSL and has an easily recognizable result.
test_url = 'http://api.geonames.org/countryCode?' + '&'.join([
    'lat=63.069',        # latitude of Denali
    'lng=-151.0',        # longitude of Denali
    'username=transfix', # name of an account I created
])

# Activate mechanize
browser = Browser()
browser.set_handle_robots(False)

# Determine whether network is already unlocked
resp = browser.open(test_url)
if 'US' == resp.get_data().strip().upper():
    # We received the expected result, this would only happen if the network was
    # already unlocked.
    print("Peet's wifi is already unlocked.")
    sys.exit()

try:
    # We did not receive the result, meaning that we should have been redirected
    # to the terms and conditions page, and we simply need to accept them.
    # This is done by looking for the link that contains 'continue_url' and
    # following it (clicking on it).
    links = list(browser.links(url_regex='.*continue_url.*'))
    assert len(links) == 1
    resp = browser.follow_link(links[0])
    assert resp.code == 200
    print("Peet's wifi successfully unlocked.")

except (AssertionError, BrowserStateError, LinkNotFoundError):
    print('Whoops, something is wrong. Cannot find accept button. Response saved to resp.html.')
    page = resp.get_data()
    with open('resp.html', 'w') as f:
        f.write(page)
